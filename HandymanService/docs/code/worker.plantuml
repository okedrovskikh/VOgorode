@startuml

!theme plain
top to bottom direction
skinparam linetype ortho

class ExtendedByUserWorker {
  + getId(): String
  + hashCode(): int
  + toString(): String
  + getServices(): List<WorkEnum>
  + getLatitude(): Double
  + setLandscapeUser(LandscapeUser): void
  + setLongitude(Double): void
  + builder(): ExtendedByUserWorkerBuilder
  + getLongitude(): Double
  # canEqual(Object): boolean
  + getLandscapeUser(): LandscapeUser
  + setId(String): void
  + setServices(List<WorkEnum>): void
  + equals(Object): boolean
  + setLatitude(Double): void
}
class Worker {
  + getId(): String
  + getLandscapeUserId(): UUID
  + getServices(): List<WorkEnum>
  + getLatitude(): Double
  + hashCode(): int
  + toString(): String
  + getLongitude(): Double
  + equals(Object): boolean
  # canEqual(Object): boolean
  + setId(String): void
  + setLandscapeUserId(UUID): void
  + builder(): WorkerBuilder
  + setLatitude(Double): void
  + setLongitude(Double): void
  + setServices(List<WorkEnum>): void
}
class WorkerController {
  + delete(String): void
  + getById(String): ExtendedByUserWorker
  + save(WorkerCreateDto): Worker
  + findAll(): List<ExtendedByUserWorker>
  + update(WorkerUpdateDto): Worker
}
class WorkerCreateDto {
  + setLogin(String): void
  + getLogin(): String
  + getEmail(): String
  + getTelephone(): String
  + setLongitude(Double): void
  + getServices(): List<WorkEnum>
  + getLatitude(): Double
  + setLatitude(Double): void
  + getLongitude(): Double
  + setEmail(String): void
  # canEqual(Object): boolean
  + hashCode(): int
  + setTelephone(String): void
  + equals(Object): boolean
  + setServices(List<WorkEnum>): void
  + toString(): String
}
class WorkerMapper {
  + dtoToWorker(WorkerCreateDto): Worker
  + dtoToWorker(WorkerUpdateDto): Worker
  + mapToGrpcResponse(Worker): WorkerResponse
  + toExtendedWorker(Worker, LandscapeUser): ExtendedByUserWorker
}
interface WorkerRepository << interface >>
class WorkerService {
  + update(WorkerUpdateDto): Worker
  + findById(String): Optional<Worker>
  + findAll(): List<Worker>
  + findAllExtended(): List<ExtendedByUserWorker>
  + delete(String): void
  + save(WorkerCreateDto): Worker
  + getById(String): Worker
  + getExtendedById(String): ExtendedByUserWorker
  - mapToExtended(Worker): ExtendedByUserWorker
}
class WorkerServiceGrpcImpl {
  + findAll(Empty, StreamObserver<WorkerResponse>): void
}
class WorkerUpdateDto {
  + setEmail(String): void
  + getLogin(): String
  + setId(String): void
  + setLatitude(Double): void
  + getEmail(): String
  + getTelephone(): String
  + getId(): String
  + hashCode(): int
  + getServices(): List<WorkEnum>
  # canEqual(Object): boolean
  + toString(): String
  + setLongitude(Double): void
  + getLatitude(): Double
  + getLongitude(): Double
  + setServices(List<WorkEnum>): void
  + equals(Object): boolean
  + setLogin(String): void
  + setTelephone(String): void
}

WorkerController      "1" *-[#595959,plain]-> "workerService\n1" WorkerService         
WorkerService         "1" *-[#595959,plain]-> "workerMapper\n1" WorkerMapper          
WorkerService         "1" *-[#595959,plain]-> "workerRepository\n1" WorkerRepository      
WorkerServiceGrpcImpl "1" *-[#595959,plain]-> "workerMapper\n1" WorkerMapper          
WorkerServiceGrpcImpl "1" *-[#595959,plain]-> "workerService\n1" WorkerService         
@enduml
