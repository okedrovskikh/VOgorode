@startuml

!theme plain
top to bottom direction
skinparam linetype ortho

class User {
  + getId(): Long
  + setId(Long): void
  + getName(): String
  + setEmail(String): void
  + setTelephone(String): void
  + getSurname(): String
  + builder(): UserBuilder
  + setName(String): void
  + setPhoto(Byte[]): void
  + getSkills(): WorkEnum[]
  + getEmail(): String
  + setSkills(WorkEnum[]): void
  + setAccounts(List<BankAccount>): void
  + getTelephone(): String
  + getAccounts(): List<BankAccount>
  + getPhoto(): Byte[]
  + setSurname(String): void
  + hashCode(): int
  + equals(Object): boolean
}
class UserController {
  + delete(Long): void
  + getById(Long): User
  + findAll(boolean): List<User>
  + update(UserUpdateDto): User
  + save(UserCreateDto): User
}
class UserCreateDto {
  + getSkills(): WorkEnum[]
  + getName(): String
  + getSurname(): String
  # canEqual(Object): boolean
  + hashCode(): int
  + setAccountsId(List<Long>): void
  + getEmail(): String
  + getTelephone(): String
  + getAccountsId(): List<Long>
  + toString(): String
  + getPhoto(): Byte[]
  + equals(Object): boolean
  + setName(String): void
  + setTelephone(String): void
  + setPhoto(Byte[]): void
  + setSurname(String): void
  + setSkills(WorkEnum[]): void
  + setEmail(String): void
}
class UserMapper {
  + dtoToUser(UserCreateDto): User
  + updateUser(User, UserUpdateDto): User
}
interface UserRepository << interface >> {
  + findAll(): List<User>
  + findAll(Sort): List<User>
  + findById(Long): Optional<User>
}
class UserService {
  + getById(Long): User
  + findAllUnsorted(): List<User>
  + findAll(boolean): List<User>
  + update(UserUpdateDto): User
  + save(UserCreateDto): User
  + findById(Long): Optional<User>
  + findAllSortedBySurname(): List<User>
  + delete(Long): void
}
class UserUpdateDto {
  + getTelephone(): String
  + getId(): Long
  # canEqual(Object): boolean
  + getName(): String
  + getSurname(): String
  + getSkills(): WorkEnum[]
  + getEmail(): String
  + setSurname(String): void
  + setSkills(WorkEnum[]): void
  + getAccountsId(): List<Long>
  + setEmail(String): void
  + getPhoto(): Byte[]
  + hashCode(): int
  + setId(Long): void
  + setTelephone(String): void
  + setPhoto(Byte[]): void
  + equals(Object): boolean
  + toString(): String
  + setName(String): void
  + setAccountsId(List<Long>): void
}

UserController "1" *-[#595959,plain]-> "userService\n1" UserService    
UserService    "1" *-[#595959,plain]-> "userMapper\n1" UserMapper     
UserService    "1" *-[#595959,plain]-> "userRepository\n1" UserRepository 
@enduml
