@startuml

!theme plain
top to bottom direction
skinparam linetype ortho

class BankAccount {
  + getId(): Long
  + getUser(): User
  + getCardId(): String
  + getPaymentSystem(): PaymentSystem
  + builder(): BankAccountBuilder
  + getBank(): String
  + setId(Long): void
  + setUser(User): void
  + setCardId(String): void
  + setPaymentSystem(PaymentSystem): void
  + setBank(String): void
  + hashCode(): int
  + equals(Object): boolean
}
class BankAccountController {
  + save(BankAccountCreateDto): BankAccount
  + getById(Long): BankAccount
  + findAll(): List<BankAccount>
  + update(BankAccountUpdateDto): BankAccount
  + delete(Long): void
}
class BankAccountCreateDto {
  # canEqual(Object): boolean
  + getCardId(): String
  + getPaymentSystem(): PaymentSystem
  + getBank(): String
  + setCardId(String): void
  + setPaymentSystem(PaymentSystem): void
  + setBank(String): void
  + equals(Object): boolean
  + hashCode(): int
  + toString(): String
}
class BankAccountGrpcServiceImpl {
  + findAllBanks(Empty, StreamObserver<BankAccountResponse>): void
  - createResponse(String): BankAccountResponse
}
class BankAccountMapper {
  + dtoToAccount(BankAccountCreateDto): BankAccount
  + updateAccount(BankAccount, BankAccountUpdateDto): BankAccount
}
interface BankAccountRepository << interface >> {
  + findAllBanks(): List<String>
}
class BankAccountService {
  + save(BankAccountCreateDto): BankAccount
  + getById(Long): BankAccount
  + findById(Long): Optional<BankAccount>
  + findAllBanks(): List<String>
  + updateBankAccountsUser(List<Long>, User): List<BankAccount>
  + update(BankAccountUpdateDto): BankAccount
  + findAll(): List<BankAccount>
  + delete(Long): void
}
class BankAccountUpdateDto {
  + getBank(): String
  + getId(): Long
  + getCardId(): String
  + getPaymentSystem(): PaymentSystem
  + setId(Long): void
  + setCardId(String): void
  + setPaymentSystem(PaymentSystem): void
  + setBank(String): void
  + equals(Object): boolean
  # canEqual(Object): boolean
  + hashCode(): int
  + toString(): String
}
enum PaymentSystem << enumeration >> {
  + values(): PaymentSystem[]
  + valueOf(String): PaymentSystem
}
class PaymentSystemEnumType {
  + nullSafeSet(PreparedStatement, PaymentSystem, int, SharedSessionContractImplementor): void
  + nullSafeGet(ResultSet, int, SharedSessionContractImplementor, Object): PaymentSystem
}

BankAccount                "1" *-[#595959,plain]-> "paymentSystem\n1" PaymentSystem              
BankAccountController      "1" *-[#595959,plain]-> "bankAccountService\n1" BankAccountService         
BankAccountCreateDto       "1" *-[#595959,plain]-> "paymentSystem\n1" PaymentSystem              
BankAccountGrpcServiceImpl "1" *-[#595959,plain]-> "bankAccountService\n1" BankAccountService         
BankAccountService         "1" *-[#595959,plain]-> "bankAccountMapper\n1" BankAccountMapper          
BankAccountService         "1" *-[#595959,plain]-> "bankAccountRepository\n1" BankAccountRepository      
BankAccountUpdateDto       "1" *-[#595959,plain]-> "paymentSystem\n1" PaymentSystem              
@enduml
