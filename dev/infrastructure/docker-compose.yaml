version: '3.8'

networks:
  infrastructure-network:
    driver: bridge

services:
  postgres:
    image: postgis/postgis:15-3.3-alpine
    container_name: infrastructure-postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: vogorode
      POSTGRES_PASSWORD: 123
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    expose: 
      - 5432
    ports:
      - 5433:5432
    healthcheck:
      test: pg_isready -U postgres

  mongo:
    image: mongo
    container_name: infrastructure-mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: vogorode
    volumes:
      - ./mongo_data:/data/db
    expose:
      - 27017
    ports:
      - 27017:27017
    networks:
      - infrastructure-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: infrastructure-zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    expose:
      - 2181
    networks:
      - infrastructure-network

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: infrastructure-kafka
    restart: always
    environment:
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: EXTERNAL:PLAINTEXT, INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: EXTERNAL://localhost:10092, INTERNAL://kafka:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
    expose:
      - 10092
      - 29092
    ports:
      - 10092:10092
    networks:
      - infrastructure-network
    depends_on:
      - zookeeper

  schema-registry:
    image: confluentinc/cp-schema-registry:7.3.0
    container_name: infrastructure-schema-registry
    restart: always
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:29092
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    expose:
      - 8081
    ports:
      - 10001:8081
    networks:
      - infrastructure-network
    depends_on:
      - zookeeper
      - kafka

  prometheus:
    image: prom/prometheus
    container_name: infrastructure-prometheus
    restart: always
    command:
      - --web.listen-address=:10000
      - --storage.tsdb.path=/prometheus
      - --config.file=/etc/prometheus/prometheus.yml
    expose:
      - 10000
    ports:
      - 10000:10000
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus_data:/prometheus
    networks:
      - infrastructure-network

  grafana:
    image: grafana/grafana:8.2.6
    container_name: infrastructure-grafana
    restart: always
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: false
    expose:
      - 3000
    ports:
      - 3000:3000
    volumes:
      - ./grafana_data:/var/lib/grafana
      - ../../monitoring:/etc/grafana/provisioning
    networks:
      - infrastructure-network
    depends_on:
      - prometheus
